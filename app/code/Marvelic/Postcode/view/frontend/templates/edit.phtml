<?php
/**
 * Copyright Â© 2016 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */
// @codingStandardsIgnoreFile
?>
<?php
/**
 * Edit customer address template
 *
 * @var $block \Magento\Customer\Block\Address\Edit
 */
?>
<?php
    $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
    $store = $objectManager->get('Magento\Store\Model\StoreManagerInterface');


    //echo $this->storeManager->getStore()->getId();
?>
<form  class="form-address-edit" action="<?php /* @escapeNotVerified */ echo $block->getSaveUrl() ?>" method="post" id="form-validate" enctype="multipart/form-data" data-hasrequired="<?php /* @escapeNotVerified */ echo __('* Required Fields') ?>">
    <fieldset class="fieldset">
        <legend class="legend"><span><?php /* @escapeNotVerified */ echo __('Contact Information') ?></span></legend><br>
        <?php echo $block->getBlockHtml('formkey')?>
        <input type="hidden" name="success_url" value="<?php /* @escapeNotVerified */ echo $block->getSuccessUrl() ?>">
        <input type="hidden" name="error_url" value="<?php /* @escapeNotVerified */ echo $block->getErrorUrl() ?>">
        <?php echo $block->getNameBlockHtml() ?>
        <div class="field company">
            <label class="label" for="company"><span><?php /* @escapeNotVerified */ echo __('Company') ?></span></label>
            <div class="control">
                <input type="text" name="company" id="company" title="<?php /* @escapeNotVerified */ echo __('Company') ?>" value="<?php echo $block->escapeHtml($block->getAddress()->getCompany()) ?>" class="input-text <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('company') ?>" autocomplete="new-password">
            </div>
        </div>
        <?php if ($this->helper('Magento\Customer\Helper\Address')->isVatAttributeVisible()) : ?>
            <div class="field taxvat">
                <label class="label" for="vat_id"><span><?php /* @escapeNotVerified */ echo __('VAT Number') ?></span></label>
                <div class="control">
                    <input type="text" name="vat_id" maxlength="13" value="<?php echo $block->escapeHtml($block->getAddress()->getVatId()) ?>" title="<?php /* @escapeNotVerified */ echo __('VAT Number') ?>" class="input-text <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('vat_id') ?>" id="vat_id"  autocomplete="new-password">
                </div>
            </div>
        <?php endif; ?>

        <div class="field telephone required">
            <label class="label" for="telephone"><span><?php /* @escapeNotVerified */ echo __('Phone Number') ?></span></label>
            <div class="control">
                <input type="text" data-validate="{required:true,'validate-digits':true,'minlength':9,'maxlength':10}" name="telephone" value="<?php echo $block->escapeHtml($block->getAddress()->getTelephone()) ?>" title="<?php /* @escapeNotVerified */ echo __('Phone Number') ?>" class="input-text <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('telephone') ?>" id="telephone" autocomplete="new-password">
            </div>
        </div>
        <div class="field fax">
            <label class="label" for="fax"><span><?php /* @escapeNotVerified */ echo __('Fax') ?></span></label>
            <div class="control">
                <input type="text" name="fax" id="fax" title="<?php /* @escapeNotVerified */ echo __('Fax') ?>" value="<?php echo $block->escapeHtml($block->getAddress()->getFax()) ?>" class="input-text <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('fax') ?>" autocomplete="new-password">
            </div>
        </div>
    </fieldset>
    <fieldset class="fieldset">
        <legend class="legend"><span><?php /* @escapeNotVerified */ echo __('Address') ?></span></legend><br>
        <?php $_streetValidationClass = $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('street'); ?>
        <div class="field street required">
            <label for="street_1" class="label"><span><?php /* @escapeNotVerified */ echo __('Street Address') ?></span></label>
            <div class="control">
                <div class="field _required" data-bind="visible: visible, attr: {'name': element.dataScope}, css: additionalClasses" name="addressBook.street.0">
                    <input placeholder = "<?php  /* @escapeNotVerified */ echo __('House No., Unit/Floor, Building, Street Name') ?>" type="text" name="street[0]" title="<?php /* @escapeNotVerified */ echo __('Street Address') ?>" id="street_1" class="input-text <?php /* @escapeNotVerified */ echo $_streetValidationClass ?>" value="<?php echo $block->escapeHtml($block->getStreetLine(1)) ?>" autocomplete="new-password">
                </div>
                <div class="field additional" data-bind="visible: visible, attr: {'name': element.dataScope}, css: additionalClasses" name="addressBook.street.1">
                    <input type="text" data-validate="{'required':false}" name="street[1]" title="<?php /* @escapeNotVerified */ echo __('Street Address') ?>" id="street_2" class="input-text " value="<?php echo $block->escapeHtml($block->getStreetLine(2)) ?>">
                </div>
            </div>
        </div>

        <div class="field district required">
            <label class="label" for="district"><span><?php /* @escapeNotVerified */ echo __('Subdistrict') ?></span></label>
            <div class="control">
                <input type="text" name="district" value="<?php echo $block->getDistrict() ?>" title="<?php /* @escapeNotVerified */ echo __('Subdistrict') ?>" class="input-text <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('district') ?>" id="district" autocomplete="new-password">
            </div>
        </div>

        <div class="field city required">
            <label class="label" for="city"><span><?php /* @escapeNotVerified */ echo __('City') ?></span></label>
            <div class="control">
                <input type="text" name="city" value="<?php echo $block->escapeHtml($block->getAddress()->getCity()) ?>" title="<?php /* @escapeNotVerified */ echo __('City') ?>" class="input-text" id="city" autocomplete="new-password">
            </div>
        </div>
        <div class="field region required">
            <label class="label" for="region_id"><span><?php /* @escapeNotVerified */ echo __('State/Province') ?></span></label>
            <div class="control">
                <select id="region_id" name="region_id" title="<?php /* @escapeNotVerified */ echo __('State/Province') ?>" class="validate-select" <?php echo(!$block->getConfig('general/region/display_all')) ? ' disabled="disabled"' : '';?>>
                    <option value=""><?php /* @escapeNotVerified */ echo __('Please select a region, state or province.') ?></option>
                </select>
                <input type="text" id="region" name="region" value="<?php echo $block->escapeHtml($block->getRegion()) ?>"  title="<?php /* @escapeNotVerified */ echo __('State/Province') ?>" class="input-text <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('region') ?>"<?php echo(!$block->getConfig('general/region/display_all')) ? ' disabled="disabled"' : '';?> autocomplete="new-password"/>
            </div>
        </div>
        <div class="field zip required">
            <label class="label" for="zip"><span><?php /* @escapeNotVerified */ echo __('Zip/Postal Code') ?></span></label>
            <div class="control">
                <input type="text" name="postcode" value="<?php echo $block->escapeHtml($block->getAddress()->getPostcode()) ?>" title="<?php /* @escapeNotVerified */ echo __('Zip/Postal Code') ?>" id="zip" class="input-text validate-zip-international <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('postcode') ?>" autocomplete="new-password">
            </div>
        </div>
        <div class="field country required">
            <label class="label" for="country"><span><?php /* @escapeNotVerified */ echo __('Country') ?></span></label>
            <div class="control">
                <?php echo $block->getCountryHtmlSelect() ?>
            </div>
        </div>

        <?php if ($block->isDefaultBilling()): ?>
            <div class="message info"><?php /* @escapeNotVerified */ echo __("It's a default billing address.") ?></div>
        <?php elseif ($block->canSetAsDefaultBilling()): ?>
            <div class="field choice set billing">
                <input type="checkbox" id="primary_billing" name="default_billing" value="1" class="checkbox">
                <label class="label" for="primary_billing"><span><?php /* @escapeNotVerified */ echo __('Use as my default billing address') ?></span></label>
            </div>
        <?php else: ?>
            <input type="hidden" name="default_billing" value="1" />
        <?php endif; ?>

        <?php if ($block->isDefaultShipping()): ?>
            <div class="message info"><?php /* @escapeNotVerified */ echo __("It's a default shipping address.") ?></div>
        <?php elseif ($block->canSetAsDefaultShipping()): ?>
            <div class="field choice set shipping">
                <input type="checkbox" id="primary_shipping" name="default_shipping" value="1" class="checkbox">
                <label class="label" for="primary_shipping"><span><?php /* @escapeNotVerified */ echo __('Use as my default shipping address') ?></span></label>
            </div>
        <?php else: ?>
            <input type="hidden" name="default_shipping" value="1">
        <?php endif; ?>
    </fieldset>
    <hr>
    <div class="actions-toolbar">
        <div class="primary">
            <button type="submit" class="action save btn btn-primary" data-action="save-address" title="<?php /* @escapeNotVerified */ echo __('Save Address') ?>">
                <span><?php /* @escapeNotVerified */ echo __('Save Address') ?></span>
            </button>
            <a class="action btn btn-secondary margin-left10 back" href="<?php echo $block->escapeUrl($block->getBackUrl()) ?>"><span><?php /* @escapeNotVerified */ echo __('Go back') ?></span></a>
        </div>
    </div>
</form>


<script type="text/x-magento-init">
    {
        "#form-validate": {
            "validation": {}
        },
        "#country": {
            "regionUpdater": {
                "optionalRegionAllowed": <?php /* @escapeNotVerified */ echo($block->getConfig('general/region/display_all') ? 'true' : 'false'); ?>,
                "regionListId": "#region_id",
                "regionInputId": "#region",
                "postcodeId": "#zip",
                "form": "#form-validate",
                "regionJson": <?php /* @escapeNotVerified */ echo $this->helper('Magento\Directory\Helper\Data')->getRegionJson() ?>,
                "defaultRegion": "<?php /* @escapeNotVerified */ echo $block->getRegionId() ?>",
                "countriesWithOptionalZip": <?php /* @escapeNotVerified */ echo $this->helper('Magento\Directory\Helper\Data')->getCountriesWithOptionalZip(true) ?>
            }
        }
    }
</script>
<?php $lang = $store->getStore()->getCode(); ?>

<script type="text/javascript">
    require(['jquery','thaieng', 'uiRegistry'],function($, ThaiAddressEnTh, registry){
        var config          = <?php echo $block->getConfig('postcode/options/enable') ?>;
        var storeCode       = <?php echo $store->getStore()->getId(); ?>;
        const lang          = (storeCode === 1) ? 'EN' : 'TH';
        const typeAddress   = 'shipping';
        const dbUrl         = '<?php echo $this->getViewFileUrl('Marvelic_Postcode::js/thai_address_database_en_th.js'); ?>';
        $(function() {
            console.log(registry);
            if(config == 1) {
                var countryNow = countrySelect = document.getElementById('country').value;
                if(countryNow === "TH"){
                    $.ThaiAddressEnTh({
                        lang        : lang,
                        typeAddress : typeAddress,
                        database    : dbUrl,
                        district    : $('#district'),
                        amphoe      : $('#city'),
                        province    : $('#region'),
                        zipcode     : $('#zip'),
                        onLoad: function(){
                            console.info('Autocomplete is ready!');
                        }
                    });
                }
                $(document).on('change', '#country', function() {
                    countrySelect = $(this).val();
                    if (countrySelect === "TH"){
                        $.ThaiAddressEnTh({
                            lang        : lang,
                            typeAddress : typeAddress,
                            database    : dbUrl,
                            district    : $('#district'),
                            amphoe      : $('#city'),
                            province    : $('#region'),
                            zipcode     : $('#zip'),
                            onLoad: function(){
                                console.info('Autocomplete is ready!');
                            }
                        });
                    }
                });
            }
        });
        $(document.body).ready(function (e){
            $("select#country").val("TH");
            countrySelect = $("select#country").val();
            if (countrySelect === "TH"){
                $.ThaiAddressEnTh({
                    lang        : lang,
                    typeAddress : typeAddress,
                    database    : dbUrl,
                    district    : $('#district'),
                    amphoe      : $('#city'),
                    province    : $('#region'),
                    zipcode     : $('#zip'),
                    onLoad: function(){
                        console.info('Autocomplete is ready!');
                    }
                });
            }
            $(".form-address-edit .fieldset .region #region_id").remove();
        });
        $(document.body).on("blur",".form-address-edit input[name='street[0]']",function(e){
            var s = $(".form-address-edit input[name='street[0]']").val();
            if(s.length>80){
                if($(".form-address-edit input[name='street[0]']").parent().find(".noticealert").length==0){
                    $(".form-address-edit input[name='street[0]']").parent().append("<div class='noticealert'>"+"<?php echo __('Please enter less or equal than 80 symbols.')?>"+"</div>");
                }
                $(".form-address-edit .primary .primary").addClass('action-save-disable');
                $(".form-address-edit .action-save-disable").attr("disabled",true);
            }
            else{
                $(".form-address-edit input[name='street[0]']").parent().find(".noticealert").replaceWith("");
                if($(".form-address-edit").find(".invalidnotice").length ==0 && $(".form-address-edit").find(".noticealert").length ==0){
                    $(".form-address-edit .action-save-disable").attr("disabled",false);
                }
            }
        });
        $(document.body).on("blur",".form-address-edit input[name='street[1]']",function(e){
            var s = $(".form-address-edit input[name='street[1]']").val();
            if(s.length>80){
                if($(".form-address-edit input[name='street[1]']").parent().find(".noticealert").length==0){
                    $(".form-address-edit input[name='street[1]']").parent().append("<div class='noticealert'>"+"<?php echo __('Please enter less or equal than 80 symbols.')?>"+"</div>");
                }
                $(".form-address-edit .primary .primary").addClass('action-save-disable');
                $(".form-address-edit .action-save-disable").attr("disabled",true);
            }
            else{
                $(".form-address-edit input[name='street[1]']").parent().find(".noticealert").replaceWith("");
                if($(".form-address-edit").find(".invalidnotice").length ==0 && $(".form-address-edit").find(".noticealert").length ==0){
                    $(".form-address-edit .action-save-disable").attr("disabled",false);
                }
            }
        });
        var db = require.toUrl('Marvelic_Postcode/js/thai_address_database_en_th.js');
        $(document.body).on('blur',".form-address-edit input[name='city']",function (e) {
            $.getJSON(db, function (data) {
                var items = [];
                zip = $(".form-address-edit input[name='postcode']").val();
                district = $(".form-address-edit input[name='district']").val();
                region = $(".form-address-edit input[name='region']").val();
                city = $(".form-address-edit input[name='city']").val();
                if(zip!=""){
                    if(lang=="TH"){
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                if(region!=""){
                                    if(val.province==region){
                                        if(district!=""){
                                            items.push(val.district);
                                            if(val.district==district){
                                                items.push(val.amphoe);
                                            }
                                        }
                                    }
                                }
                            }
                        });
                    }
                    else{
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                if(region!=""){
                                    if(val.province_en==region){
                                        if(district!=""){
                                            if(val.district_en==district){
                                                items.push(val.amphoe_en);
                                            }
                                        }
                                    }
                                }
                            }
                        });
                    }
                }
                var bool = items.includes(city);
                if(bool==false){
                    if($(".form-address-edit input[name='city']").parent().find('span.invalidnotice').length == 0){
                        $(".form-address-edit input[name='city']").parent().append("<span class='invalidnotice'>"+"<?php echo __("District is not valid. Please select valid postcode") ?>"+"</span>");
                    }
                    $(".form-address-edit .primary .primary").addClass('action-save-disable');
                    $(".form-address-edit .action-save-disable").attr("disabled",true);
                }
                else{
                    $(".form-address-edit input[name='city']").parent().find(".invalidnotice").replaceWith("");
                    if($(".form-address-edit").find(".invalidnotice").length ==0 && $(".form-address-edit").find(".noticealert").length ==0){
                        $(".form-address-edit .action-save-disable").attr("disabled",false);
                    }
                }
            });
        });
        $(document.body).on('blur',".form-address-edit input[name='district']",function (e) {
            $.getJSON(db, function (data) {
                var items = [];
                zip = $(".form-address-edit input[name='postcode']").val();
                district = $(".form-address-edit input[name='district']").val();
                region = $(".form-address-edit input[name='region']").val();
                city = $(".form-address-edit input[name='city']").val();
                if(zip!=""){
                    if(lang=="TH"){
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                if(region!=""){
                                    if(val.province==region){
                                        items.push(val.district);
                                    }
                                }
                            }
                        });
                    }
                    else{
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                if(region!=""){
                                    if(val.province_en==region){
                                        if(district!=""){
                                            items.push(val.district_en);
                                        }
                                    }
                                }
                            }
                        });
                    }
                }
                var bool = items.includes(district);
                if(bool==false){
                    if($(".form-address-edit input[name='district']").parent().find('span.invalidnotice').length == 0){
                        $(".form-address-edit input[name='district']").parent().append("<span class='invalidnotice'>"+"<?php echo __("Sub District is not valid. Please select valid postcode") ?>"+"</span>");
                    }
                    $(".form-address-edit .primary .primary").addClass('action-save-disable');
                    $(".form-address-edit .action-save-disable").attr("disabled",true);
                }
                else{
                    $(".form-address-edit input[name='district']").parent().find(".invalidnotice").replaceWith("");
                    if($(".form-address-edit").find(".invalidnotice").length ==0 && $(".form-address-edit").find(".noticealert").length ==0){
                        $(".form-address-edit .action-save-disable").attr("disabled",false);
                    }
                }
            });
        });
        $(document.body).on('blur',".form-address-edit input[name='region']",function (e) {
            $.getJSON(db, function (data) {
                var items = [];
                zip = $(".form-address-edit input[name='postcode']").val();
                district = $(".form-address-edit input[name='district']").val();
                region = $(".form-address-edit input[name='region']").val();
                city = $(".form-address-edit input[name='city']").val();
                if(zip!=""){
                    $.each( data, function( key, val ) {
                        if(val.zipcode==zip){
                            items.push(val.province);
                        }
                    });
                    if(lang=="TH"){
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                items.push(val.province);
                            }
                        });
                    }
                    else{
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                items.push(val.province_en);
                            }
                        });
                    }
                }
                var bool = items.includes(region);
                if(bool==false){
                    if($(".form-address-edit  input[name='region']").parent().find('span.invalidnotice').length == 0){
                        $(".form-address-edit  input[name='region']").parent().append("<span class='invalidnotice'>"+"<?php echo __("Province is not valid. Please select valid postcode") ?>"+"</span>");
                    }
                    $(".form-address-edit .primary .primary").addClass('action-save-disable');
                    $(".form-address-edit .action-save-disable").attr("disabled",true);
                }
                else{
                    $(".form-address-edit  input[name='region']").parent().find(".invalidnotice").replaceWith("");
                    if($(".form-address-edit").find(".invalidnotice").length ==0 && $(".form-address-edit").find(".noticealert").length ==0){
                        $(".form-address-edit .action-save-disable").attr("disabled",false);
                    }
                }
            });
        });
        $(document.body).on('blur change',".form-address-edit input[name='postcode']",function (e) {
            $.getJSON(db, function (data) {
                var items = [];
                zip = $(".form-address-edit input[name='postcode']").val();
                district = $(".form-address-edit input[name='district']").val();
                region = $(".form-address-edit input[name='region']").val();
                city = $(".form-address-edit input[name='city']").val();
                if(zip!=""){
                    $.each( data, function( key, val ) {
                        items.push(val.zipcode);
                    });
                }
                var bool = items.includes(zip);
                if(bool==false){
                    if($(".form-address-edit input[name='postcode']").parent().find('span.invalidnotice').length == 0){
                        $(".form-address-edit input[name='postcode']").parent().append("<span class='invalidnotice'>"+"<?php echo __("Postcode is not valid. Please select valid postcode") ?>"+"</span>");
                    }
                    $(".form-address-edit .primary .primary").addClass('action-save-disable');
                    $(".form-address-edit .action-save-disable").attr("disabled",true);
                }
                else{
                    $(".form-address-edit input[name='postcode']").parent().find(".invalidnotice").replaceWith("");
                    var postcodevaliditems = [];
                    if(lang=="TH"){
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                postcodevaliditems.push(val.province);
                                if(val.province==region){
                                    postcodevaliditems.push(val.district);
                                    if(val.district==district){
                                        postcodevaliditems.push(val.amphoe);
                                    }
                                }
                            }
                        });
                    }
                    else{
                        $.each( data, function( key, val ) {
                            if(val.zipcode==zip){
                                postcodevaliditems.push(val.province_en);
                                if(val.province_en==region){
                                    postcodevaliditems.push(val.district_en);
                                    if(val.district_en==district){
                                        postcodevaliditems.push(val.amphoe_en);
                                    }
                                }
                            }
                        });
                    }
                    var boolprovince = postcodevaliditems.includes(region);
                    var booldist = postcodevaliditems.includes(district);
                    var boolcity = postcodevaliditems.includes(city);
                    if(boolprovince==true && booldist==true && boolcity==true){
                        $(".form-address-edit input[name='region']").parent().find(".invalidnotice").replaceWith("");
                        $(".form-address-edit input[name='city']").parent().find(".invalidnotice").replaceWith("");
                        $(".form-address-edit input[name='custom_attributes[district]']").parent().find(".invalidnotice").replaceWith("");
                        if($(".form-address-edit").find(".invalidnotice").length ==0 && $(".form-address-edit").find(".noticealert").length ==0){
                            $(".form-address-edit .action-save-disable").attr("disabled",false);
                        }
                    }
                }
            });
        });
        $(document.body).on('mouseup',".form-address-edit .suggestion",function (e){
            $(".form-address-edit input[name='region']").parent().find(".invalidnotice").replaceWith("");
            $(".form-address-edit input[name='city']").parent().find(".invalidnotice").replaceWith("");
            $(".form-address-edit input[name='district']").parent().find(".invalidnotice").replaceWith("");
        });
    });
</script>
<script type="text/javascript">
    require([
        'jquery',
        'mage/mage'
    ], function($){

        var dataForm = $('#form-validate');
        dataForm.mage('validation', {});

    });
</script>